@*model PagedList<POT.DAL.vw_PO_Dashboard>*@
@model string
@using Webdiyer.WebControls.Mvc
@using POT.Services
@using HSG.Helper
@using System.Collections
@{ ViewBag.Title = "Dashboard"; Layout = Defaults.masterLayout;}
@*section HeadContent {    
    <style type="text/css">
        select, input[type="text"]
        {
            width: 200px;
        }
    </style>
}*@
@{ POT.DAL.vw_PO_Dashboard dSearch = ((POT.DAL.vw_PO_Dashboard)(ViewData["SearchData"]));
   object routeValues = new { qData = Request["qData"] };
   Dictionary<string, object> txtAttr = new Dictionary<string, object>();
   txtAttr.Add("class", "hdrTxt textBox");
   txtAttr.Add("onchange", "setFiltered(1,this);");
   bool isVendor = _Session.IsOnlyVendor;
   string userType = isVendor ? "Vendor" : "Internal";
}
<form action="@Url.Content("~/Dashboard/Excel")" method="post" id="frmExcel" style="display:none" >
<input type="submit" value="Export to Excel" class="button" id="btnExcel" onclick="return excelPostback(event);" /></form>
<table width="100%">
    <tr>
        <td>
            <b class="smallHeading">Dashboard</b>
        </td>
        <td class="sqz" align="right">@*Quick search: <input type="text" class="textBox" data-bind = "value:quickSearch" title="all filters except Date and won't apply for Excel export" /> *@
        </td>
        <td class="sqz" align="right">@*Html.ActionLink("New PO", "Manage", "PO", new { POId = 0}, null)&nbsp;*@
        @Html.Raw(string.Format(Defaults.tableNavImg," class='ontopRTin' style='top:10px;' "))
        </td>
    </tr>
    <tr>
        <td colspan="3">
            <!-- START: Search Panel -->
            <form action="@Url.Content("~/Dashboard/List")" method="post" id="frm" style="display:inline" onsubmit="return doAJAXSubmit(this);">            
            <fieldset>
                <legend onclick="showHideDiv('tblSearch')" style="cursor: pointer">&nbsp;<img id="tblSearchImg" src="@Url.Content("~/Content/Images/aroB.gif")" alt="Show/Hide panel" />
                    &nbsp;Search&nbsp;</legend>                    
                <table id="tblSearch" width="100%" cellpadding="5" cellspacing="5">
                    <tr>                    
                        <td nowrap="nowrap" width="5%">
                            <u>P</u>O #
                        </td>
                        <td>
                            @Html.TextBox("PONumbers", dSearch.PONumbers, new
                       {
                           title1 = "Enter single or comma separated multiple values",
                           data_bind = "value:search.PONumbers",
                           @autofocus = "autofocus", @short="alt+p"
                       })
                        </td>
                        <td nowrap="nowrap" width="5%">
                            <u>S</u>tatus
                        </td>
                        <td>
                            @Html.DropDownList("OrderStatusID", new SelectList((IEnumerable)ViewData["Status"], "id", "value", dSearch.OrderStatusID), " ", new { @class = "dropDown", data_bind = "value:search.OrderStatusID", @short="alt+s" })
                        </td>
                        <td nowrap="nowrap">
                            <u>V</u>endor
                        </td>
                        <td>
                            @Html.TextBox("VendorName", dSearch.VendorName, new { data_bind = "value:search.VendorName", @short="alt+v" })&nbsp;@Html.Raw(string.Format(Defaults.lookupImgBtn, "VendorName"))@Html.Hidden("VendorID", dSearch.VendorID)
                        </td>
                    </tr>
                    <tr>
                        <td nowrap="nowrap">
                            PO <u>D</u>ate From
                        </td>
                        <td>
                            @Html.TextBox("PODateFrom1", dSearch.PODateFrom.HasValue ? dSearch.PODateFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { @short = "alt+d" })
                            @Html.Hidden("PODateFrom", dSearch.PODateFrom.HasValue ? dSearch.PODateFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.PODateFrom" })
                        </td>
                        <td nowrap="nowrap">
                            PO Date To
                        </td>
                        <td>
                            @Html.TextBox("PODateTo1", dSearch.PODateTo.HasValue ? dSearch.PODateTo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "")
                            @Html.Hidden("PODateTo", dSearch.PODateTo.HasValue ? dSearch.PODateTo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.PODateTo" })
                        </td>
                        <td nowrap="nowrap">
                            <u>B</u>rand
                        </td>
                        <td valign="top" nowrap="nowrap">
                            @Html.TextBox("BrandName", dSearch.BrandName, new { data_bind = "value:search.BrandName", @short="alt+b" })&nbsp;@Html.Raw(string.Format(Defaults.lookupImgBtn, "BrandName"))
                            @Html.Hidden("BrandID", dSearch.BrandID)
                        </td>
                    </tr>
                    <tr>
                        <td nowrap="nowrap">
                            ETA <u>F</u>rom
                        </td>
                        <td>
                            @Html.TextBox("ETAFrom1", dSearch.ETAFrom.HasValue ? dSearch.ETAFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { @short = "alt+f" })
                            @Html.Hidden("ETAFrom", dSearch.ETAFrom.HasValue ? dSearch.ETAFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.ETAFrom" })
                        </td>
                        <td nowrap="nowrap">
                            ETA To
                        </td>
                        <td>
                            @Html.TextBox("ETATo1", dSearch.ETATo.HasValue ? dSearch.ETATo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "")
                            @Html.Hidden("ETATo", dSearch.ETATo.HasValue ? dSearch.ETATo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.ETATo" })
                        </td>
                        <td nowrap="nowrap" width="5%">
                            <u>A</u>ssigned To
                        </td>
                        <td valign="bottom" nowrap="nowrap">
                            @Html.DropDownList("AssignTo", new SelectList((IEnumerable)ViewData["UserList"], "id", "value", dSearch.AssignTo.HasValue ? dSearch.AssignTo.Value : -1), " ", new { @class = "dropDown", data_bind = "value:search.AssignTo", @short="alt+a" })
                        </td>
                    </tr>
                    <tr>
                        <td nowrap="nowrap">
                            E<u>T</u>D From
                        </td>
                        <td>
                            @Html.TextBox("ETDFrom1", dSearch.ETDFrom.HasValue ? dSearch.ETDFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { @short = "alt+t" })
                            @Html.Hidden("ETDFrom", dSearch.ETDFrom.HasValue ? dSearch.ETDFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.ETDFrom" })
                        </td>
                        <td nowrap="nowrap">
                            ETD To
                        </td>
                        <td>
                            @Html.TextBox("ETDTo1", dSearch.ETDTo.HasValue ? dSearch.ETDTo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "")
                            @Html.Hidden("ETDTo", dSearch.ETDTo.HasValue ? dSearch.ETDTo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.ETDTo" })
                        </td>
                        <td nowrap="nowrap">
                            Ship To <u>C</u>ity
                        </td>
                        <td valign="middle" nowrap="nowrap">
                            @Html.TextBox("ShipToCity", dSearch.ShipToCity, new { data_bind = "value:search.ShipToCity", @short="alt+c" })
                        </td>
                    </tr>
                    <tr>
                        <td colspan="6" align="right">
                            <input type="submit" value="Search" class="button" id="btnsearch" />
                            <input type="submit" value="Reset" class="button" onclick="resetForm(this);" />
                            <input type="checkbox" name="doReset" id="doReset" style="display: none;" />
                            <input type="button" value="Export to Excel" class="button" onclick="document.getElementById('btnExcel').click();return false;"
                                data-bind="enable: (filteredRecords().length > 0)" />
                        </td>
                    </tr>
                </table>
            </fieldset>
            </form>
            <!-- END: Search Panel -->
        </td>
    </tr>
    <tr>
        <td colspan="3">
            <div style="display:inline;text-align:right">
                <div id="loading">Loading ...</div><br /><div class="note" id="progressCounter"></div>
            </div>
            <div id="tdGrid">            
                @*@Html.RenderPartial("./KO/ListVendor", Model); *@
                @{ Html.RenderPartial("KO/" +
                               (_Session.IsOnlyVendor ? "ListVendor" : "ListInternal"),
                               new ViewDataDictionary { { "gridPageSize", ViewData["gridPageSize"] } }); }
            </div>
        </td>
    </tr>
</table>
@*HT: Set min width required by Dashboard*@
<img src="@Url.Content("~/Content/Images/spacer.gif")" height="1px" width="900px" />
<script type="text/javascript">
    // For future manipulation: $('div.pager').children('a').click(function () {@Defaults.chkCollapse }); // Add event to each page link to check & persist collapse search panel
   var autocompleteURL = "@Defaults.commonRoot/Lookup?id=";
   var dashboardURL = '@Url.Content("~/Dashboard/")'; 
   
   var ChangePOStatusURL =  "@Url.Action("ChangePOStatus", "Dashboard", new { POID = -99 })";
   var ListURL = "@Html.Raw(@Url.Action("POListKO", "Dashboard", new { index = 0, fetchAll = true }))";
   var setSearchOptsURL = "@Html.Raw(@Url.Action("SetSearchOpts", "Dashboard"))";
   var printPOURL = "@HttpUtility.UrlDecode(Url.Action("Print", "PO", new { POID = -99 }))";

   var gridPageSize = @ViewData["gridPageSize"];
   var skipCommitChk = false;
    
    $(document).ready(function () {        
    createKO();
    window.onbeforeunload = function(e){  
        var orderBy = (vm_D.sortField() != null)? (vm_D.sortField() + " " + (vm_D.sortOrderNxtAsc()?"Desc":"Asc")) : "";
           if(skipCommitChk){skipCommitChk = false; return;}
            $.ajax({
            type: "POST",
            //contentType: "application/json; charset=utf-8",
            //dataType: "json",
            data: $("#frm").serialize(),
            url: ListURL + ((orderBy!="")?("&orderBy=" + orderBy) : "")
            ,async : false // SO: 14645011 (for FF to ensure the postback is not
            @*,success: function (data) {
                if (data != null) {//vm_D.fields.removeAll();
                    vm_D.pageIndex(0);  vm_D.cachedPagesTill(0);
                    vm_D.fields(data.records);
		    vm_D.search(data.search);
                    document.getElementById('doReset').checked = false;
                }
            }*@
        });  
         
        };
       $("#tblSearch").tableNav();
    });
    var isVendor = @isVendor.ToString().ToLower();
    var initialJSONdata = @Html.Raw(Model.ToString());
</script>
<script src="@Url.Content("~/Content/Scripts/KOVM/DashboardKOscript.js")" type="text/javascript" ></script>
@*HT: Set min width required by Dashboard*@
<img src="@Url.Content("~/Content/Images/spacer.gif")" height="1px" width="900px" />